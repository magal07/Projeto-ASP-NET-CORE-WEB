@model IEnumerable<SalesWebMvc.Models.Seller> // este objeto vai corresponder ao objeto que passamos de argumento na em SellersController no IActionResult View!

@{
	ViewData["Title"] = "Sellers";
}

<h2>@ViewData["Title"]</h2>
<p>Sellers index page</p>

<p>
	<a asp-action="Create" class="btn btn-default">CreateNew</a>
</p>

<table class="table table-striped table-hover">
<thead>
	@* cabeçalho*@
	<tr class="success"> @* success = deixar o cabeçalho conforme nossa model*@
		<th>
			@Html.DisplayNameFor(model => model.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Email)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.BirthDate)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.BaseSalary)
		</th>
		<th></th>

	</tr>
</thead>
<tbody>
	@foreach (var item in Model)
	{ // pra cada linha item na minha Model, vou criar uma linha TR na minha tabela e essa linha terá varas colunas TD
		<tr>
			<td>
			@Html.DisplayFor(modelItem => item.Name)
			</td>
			<td>
			@Html.DisplayFor(modelItem => item.Email)
			</td>
			<td>
			@Html.DisplayFor(modelItem => item.BirthDate)
			</td>
			<td>
			@Html.DisplayFor(modelItem => item.BaseSalary)
			</td>
			<td>
				<a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
				<a asp-action="Details" asp-route-id="@item.Id">Details</a>
				<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
			</td>
		</tr>
	}
</tbody>
</table>